<aside class="notes">To better understand how depth is extracted from stereo data, lets take a look at two images taken by a stereo camera.            As you can see the images are of the same scene, taken from a slightly different location, similar to when we humans alternate covering a single eye.             To calculate the depth in a certain point in the left image we first must first find the matching point in the right image. This problem is called the correspondence problem                For example is this red pointy area in the left image corresponds to this one in the right image or this one?.                     and what if we are trying to match a green point on the smooth sureface of the ball? There, the problem is even more complexed...                At this point we can assume that the images are rectified which means that they share the same y value.                     So the search for a corresponding point is limited to one row which limits the number of operation to the width of the image.                         but even if we consentrate on a single row - the solution is not that trivial because there might be more than a single match to a point.                             What we can do is to use a cost function like Sum of absolute differences of a window and not a point and return the position with the minimal cost.                                but that still might not be enough as we shall see at demo part of the presentation...</aside>
